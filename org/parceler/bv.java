package org.parceler;

import android.os.Parcelable;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

/* compiled from: Twttr */
final class bv {
    private ConcurrentMap<Class, bw> a;

    public bv() {
        this.a = new ConcurrentHashMap();
        a(getClass().getClassLoader());
    }

    public bw a(Class cls) {
        bw bwVar = (bw) this.a.get(cls);
        if (bwVar != null) {
            return bwVar;
        }
        bw b = b(cls);
        if (Parcelable.class.isAssignableFrom(cls)) {
            b = new ba();
        }
        if (b == null) {
            throw new ParcelerRuntimeException("Unable to find generated Parcelable class for " + cls.getName() + ", verify that your class is configured properly and that the Parcelable class " + c(cls) + " is generated by Parceler.");
        }
        bwVar = (bw) this.a.putIfAbsent(cls, b);
        if (bwVar == null) {
            return b;
        }
        return bwVar;
    }

    private static String c(Class cls) {
        return cls.getName() + "$$" + "Parcelable";
    }

    public bw b(Class cls) {
        try {
            return new bx(cls, Class.forName(c(cls)));
        } catch (ClassNotFoundException e) {
            return null;
        }
    }

    public void a(ClassLoader classLoader) {
        try {
            a((by) classLoader.loadClass("org.parceler.Parceler$$Parcels").newInstance());
        } catch (ClassNotFoundException e) {
        } catch (Exception e2) {
            throw new ParcelerRuntimeException("Unable to instantiate generated Repository", e2);
        } catch (Exception e22) {
            throw new ParcelerRuntimeException("Unable to access generated Repository", e22);
        }
    }

    public void a(by<bw> byVar) {
        this.a.putAll(byVar.b());
    }
}
